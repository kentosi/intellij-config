"
" IdeaVim Config File
"
" https://github.com/JetBrains/ideavim/wiki/
"
" Example: https://github.com/sdaschner/dotfiles/blob/master/.ideavimrc
" Example: https://archive.ph/70p9P#selection-835.0-835.55 - Has MethodUp/MethodDown
"
set sneak
set ignorecase " sneak will this.
set smartcase " sneak will respect this. switches to case as soon as you enter a capital.
set relativenumber
set number
set ideajoin " Means that J will concat strings, if statments, etc.
" set ideamarks - Use intelliJ bookmarks when setting vim "marks". Haven't mastered this yet.

" These allow intelliJ to use system clipboard
" Actually problematic: Select text elsewhere, then go to IntelliJ, cut text "x", now that's replaced your clipboard.
" set clipboard+=unnamed
" set clipboard+=ideaput

set ideastatusicon=gray " enabled | gray | disabled

set idearefactormode=keep " keep | select | visual

" Allows vim bindings for file tree.
Plug 'preservim/nerdtree'
set NERDTree
let g:NERDTreeMapActivateNode='l' " default from copy-pasta. change this, and following one.
let g:NERDTreeMapJumpParent='h'

" Key mappings
"
" Note: List of commands: http://codecode.fun/blog/2020/01/05/idea-actions-list
" Also by typing :actionlist (or :actionlist Terminal)
"
let mapleader=" "

" YES!!! Yank and stay at cursor!!!
" Explanation: in v mode: mc=mark "c", y=yank (which goes to start), `c=go back to c
vnoremap y mcy`c

nnoremap \e :e /Users/gavnewalkar/.ideavimrc<CR>
nnoremap \r :action IdeaVim.ReloadVimRc.reload<CR>

nnoremap <leader>t :action ActivateTerminalToolWindow<CR>

nnoremap <leader><ESC> :action HideActiveWindow<CR>

nnoremap <leader>v :action SplitVertically<CR> " get used to useing | instead
nnoremap <leader>\| :action SplitVertically<CR>
nnoremap <leader>- :action SplitHorizontally<CR>
" These don't work well since <leader>h* has other mappings.
" nnoremap <leader>h <c-w>h " go left
" nnoremap <leader>l <c-w>l " go right

nnoremap <leader>> :action MoveEditorToOppositeTabGroup<CR>

" Note you can chain actions with \| Eg:
" nmap zc :action ReformatCode  \| action RiderUnitTestRunSolutionAction<CR>


